package com.store.mgmt.inventory.mapper;

import com.store.mgmt.inventory.model.dto.*;
import com.store.mgmt.inventory.model.entity.Category;
import com.store.mgmt.inventory.model.entity.Product;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import org.mapstruct.NullValuePropertyMappingStrategy;

import java.util.List;

@Mapper(componentModel = "spring",
        nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE) // Ignore nulls for updates
public interface CategoryMapper {

    CategoryDTO toDto(Category category);
    List<CategoryDTO> toDtoList(List<Category> categories);

    @Mapping(target = "id", ignore = true) // ID is generated by JPA
    Category toEntity(CreateCategoryDTO createDTO);

    // For updating an existing product from DTO
    // nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE in @Mapper annotation
    // handles fields that are null in DTO (i.e., not provided) to be ignored.
    @Mapping(target = "id", ignore = true) // Don't update ID
    void updateCategoryFromDto(UpdateCategoryDTO updateDTO, @MappingTarget Category category);
}