services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=${DB_HOST}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET
      - JWT_EXPIRATION_MS
      - JWT_ISSUER
      - JWT_REFRESH_EXPIRATION_MS
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - ./src:/app/src
      - ./.gradle:/root/.gradle
    depends_on:
       db:
         condition: service_healthy
    networks:
      - store-network

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - store-network
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U proha -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  store-network:
    driver: bridge
